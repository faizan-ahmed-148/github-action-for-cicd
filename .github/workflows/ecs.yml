name: Pitapitapitaboo Workflow
on: workflow_dispatch
env:
  AWS_REGION: us-east-2                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: actapp           # set this to your Amazon ECR repository name
  ECS_SERVICE: vproappsvc32                # set this to your Amazon ECS service name
  ECS_CLUSTER: vprostaging32               # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: aws-files/taskdeffile.json # set this to the path to your Amazon ECS task definition                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: vproapp           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition
jobs:
  Build_And_Publish:
   runs-on: ubuntu-latest
   steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Update application.properties file
        run: |
            sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
            sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
            sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties
            cat src/main/resources/application.properties
           
      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: ${{ secrets.REGISTRY }}
         repo: actapp
         region: ${{ env.AWS_REGION }}
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true